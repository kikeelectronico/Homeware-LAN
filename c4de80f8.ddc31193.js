(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{106:function(e,t,a){"use strict";a.d(t,"a",(function(){return i})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},i=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),i=p(a),m=n,d=i["".concat(l,".").concat(m)]||i[m]||u[m]||o;return a?r.a.createElement(d,c(c({ref:t},s),{},{components:a})):r.a.createElement(d,c({ref:t},s))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=m;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var s=2;s<o;s++)l[s]=a[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},95:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return i}));var n=a(3),r=a(7),o=(a(0),a(106)),l=["components"],c={id:"install",title:"Install Homeware",sidebar_label:"Installation"},b={unversionedId:"install",id:"install",isDocsHomePage:!1,title:"Install Homeware",description:"Dependencies",source:"@site/docs/install.md",slug:"/install",permalink:"/Homeware-LAN/docs/install",editUrl:"https://github.com/kikeelectronico/Homeware-LAN/tree/master/docs/docs/install.md",version:"current",sidebar_label:"Installation",sidebar:"someSidebar",next:{title:"Connect Homeware with Google",permalink:"/Homeware-LAN/docs/connect-with-google"}},s=[],p={rightToc:s};function i(e){var t=e.components,a=Object(r.a)(e,l);return Object(o.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"dependencies"},"Dependencies"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Install docker and docker-compose")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"sudo apt install -y docker && apt install -y docker-compose\n")),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},"Install CURL")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"sudo apt install -y curl\n")),Object(o.b)("ol",{start:3},Object(o.b)("li",{parentName:"ol"},"Install git")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"sudo apt install -y git\n")),Object(o.b)("ol",{start:4},Object(o.b)("li",{parentName:"ol"},"Install your favourite text editor. For example, nano.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"sudo apt install -y nano\n")),Object(o.b)("h1",{id:"install-process"},"Install process"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Open the ports 80 and 443 on your router/firewall if needed.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create a DDNS domain and set it using your public IP. DuckDNS and no-ip are supported.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Clone the repo and cd into it  "))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/kikeelectronico/Homeware-LAN.git\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"cd Homeware-LAN\n")),Object(o.b)("ol",{start:4},Object(o.b)("li",{parentName:"ol"},"Create your own ",Object(o.b)("inlineCode",{parentName:"li"},".env")," file from ",Object(o.b)("inlineCode",{parentName:"li"},".env.template"),". Data will be used to generate certs on letsencrypt.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"cp docker/.env.template .env\n")),Object(o.b)("ol",{start:5},Object(o.b)("li",{parentName:"ol"},"Replace the default data with your values."),Object(o.b)("li",{parentName:"ol"},"Copy the docker-compose file")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Debian / Ubuntu")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"cp docker/docker-compose-debian.yaml docker-compose.yaml\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Raspberry Pi / ARM cores")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"cp docker/docker-compose-raspberry.yaml docker-compose.yaml\n")),Object(o.b)("ol",{start:7},Object(o.b)("li",{parentName:"ol"},"Start the project")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"docker-compose up -d\n")),Object(o.b)("ol",{start:8},Object(o.b)("li",{parentName:"ol"},"Set the admin user and password. Make sure to change the necessary data.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},'curl -d \'{"user":"YOURUSER", "pass":"YOURPASSWORD"}\' -H "Content-Type: application/json" -X POST https://YOURDOMAIN/api/user/set/\n')),Object(o.b)("ol",{start:9},Object(o.b)("li",{parentName:"ol"},"Set the default domain. Make sure to change the necessary data.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"curl -X GET https://YOURDOMAIN/api/settings/domain/YOURDOMAIN/\n")),Object(o.b)("ol",{start:10},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Follow this steps to link Homeware with Google Home: ",Object(o.b)("a",{parentName:"p",href:"https://kikeelectronico.github.io/Homeware-LAN/docs/connect-with-google"},"https://kikeelectronico.github.io/Homeware-LAN/docs/connect-with-google"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Finally, set up the necessary data using the Homeware's ",Object(o.b)("em",{parentName:"p"},"Settings")," page."))),Object(o.b)("h1",{id:"default-mqtt-user-and-password"},"Default MQTT user and password"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"User: mosquitto"),Object(o.b)("li",{parentName:"ul"},"Password: homewarelan123")),Object(o.b)("p",null,"You may create a different ",Object(o.b)("inlineCode",{parentName:"p"},"mosquitto_passwd")," file following ",Object(o.b)("a",{parentName:"p",href:"https://mosquitto.org/man/mosquitto_passwd-1.html"},"these steps"),"  "),Object(o.b)("p",null,"Thanks to ",Object(o.b)("a",{href:"https://github.com/ajpl",tarjet:"blanck"},"@ajpl")," for the PR."))}i.isMDXComponent=!0}}]);