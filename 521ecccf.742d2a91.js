(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{106:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return m}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=o.a.createContext({}),p=function(e){var t=o.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=p(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(r),f=n,m=l["".concat(i,".").concat(f)]||l[f]||d[f]||a;return r?o.a.createElement(m,c(c({ref:t},u),{},{components:r})):o.a.createElement(m,c({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var u=2;u<a;u++)i[u]=r[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},83:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return s})),r.d(t,"rightToc",(function(){return u})),r.d(t,"default",(function(){return l}));var n=r(3),o=r(7),a=(r(0),r(106)),i=["components"],c={id:"homewaretaskpy",title:"HomewareTask.py file",sidebar_label:"Back - homewareTask.py"},s={unversionedId:"homewaretaskpy",id:"homewaretaskpy",isDocsHomePage:!1,title:"HomewareTask.py file",description:"HomewareTasks contains functions that work periodic work like verify the public IP, synchronize the devices or execute the user's programed takss.",source:"@site/docs/homewaretaskspy.md",slug:"/homewaretaskpy",permalink:"/Homeware-LAN/docs/homewaretaskpy",editUrl:"https://github.com/kikeelectronico/Homeware-LAN/tree/master/docs/docs/homewaretaskspy.md",version:"current",sidebar_label:"Back - homewareTask.py",sidebar:"someSidebar",previous:{title:"HomewareMQTT.py file",permalink:"/Homeware-LAN/docs/homewaremqttpy"}},u=[{value:"Functions",id:"functions",children:[{value:"ddnsUpdater",id:"ddnsupdater",children:[]},{value:"syncDevicesStatus",id:"syncdevicesstatus",children:[]},{value:"operationExecutor",id:"operationexecutor",children:[]},{value:"&lt;operation-name&gt;Executor",id:"operation-nameexecutor",children:[]}]}],p={rightToc:u};function l(e){var t=e.components,r=Object(o.a)(e,i);return Object(a.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"HomewareTasks contains functions that work periodic work like verify the public IP, synchronize the devices or execute the user's programed takss."),Object(a.b)("h2",{id:"functions"},"Functions"),Object(a.b)("h3",{id:"ddnsupdater"},"ddnsUpdater"),Object(a.b)("p",null,"This function verify the public IP and sends request to the DDNS provider in order to update keep it update."),Object(a.b)("h3",{id:"syncdevicesstatus"},"syncDevicesStatus"),Object(a.b)("p",null,"This functions sends the devices its status periodically."),Object(a.b)("h3",{id:"operationexecutor"},"operationExecutor"),Object(a.b)("p",null,"This function is the entry point for the execution of the user's programed tasks."),Object(a.b)("h3",{id:"operation-nameexecutor"},"<operation-name",">","Executor"),Object(a.b)("p",null,"There are a list of functions other than ",Object(a.b)("em",{parentName:"p"},"operatorExecutor")," that are part of the recursive execution of the user's tasks. Each function do a specifuc operation like logic or, logic and, time verifier, etc."))}l.isMDXComponent=!0}}]);