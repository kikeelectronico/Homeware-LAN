"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[624],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(a),m=i,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return a?n.createElement(h,r(r({ref:t},p),{},{components:a})):n.createElement(h,r({ref:t},p))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,r[1]=s;for(var c=2;c<o;c++)r[c]=a[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8748:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=a(7462),i=(a(7294),a(3905));const o={id:"mqtt-api",title:"MQTT API",sidebar_label:"MQTT API"},r=void 0,s={unversionedId:"mqtt-api",id:"mqtt-api",title:"MQTT API",description:"Homeware LAN has an MQTT API for getting and setting the status of any device. You can use this API for communicating Homeware with your hardware devices.",source:"@site/docs/mqtt-api.md",sourceDirName:".",slug:"/mqtt-api",permalink:"/Homeware-LAN/docs/mqtt-api",draft:!1,editUrl:"https://github.com/kikeelectronico/Homeware-LAN/tree/master/docs/docs/mqtt-api.md",tags:[],version:"current",frontMatter:{id:"mqtt-api",title:"MQTT API",sidebar_label:"MQTT API"},sidebar:"someSidebar",previous:{title:"Google auth for sync",permalink:"/Homeware-LAN/docs/google-auth"},next:{title:"Create a device",permalink:"/Homeware-LAN/docs/create-device"}},l={},c=[{value:"Connection data",id:"connection-data",level:2},{value:"Status of a device",id:"status-of-a-device",level:2},{value:"Subscribing to the status of a device",id:"subscribing-to-the-status-of-a-device",level:2},{value:"Main Topic",id:"main-topic",level:3},{value:"Example",id:"example",level:4},{value:"Individual Topics",id:"individual-topics",level:3},{value:"Example",id:"example-1",level:4},{value:"Update the status of a device",id:"update-the-status-of-a-device",level:2},{value:"Example",id:"example-2",level:4},{value:"Request the status of a device",id:"request-the-status-of-a-device",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...a}=e;return(0,i.kt)(u,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Homeware LAN has an MQTT API for getting and setting the status of any device. You can use this API for communicating Homeware with your hardware devices."),(0,i.kt)("h2",{id:"connection-data"},"Connection data"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Host"),": It is the IP of the machine that runs Homeware."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Port"),": 1883"),(0,i.kt)("h2",{id:"status-of-a-device"},"Status of a device"),(0,i.kt)("p",null,"The status of a device is composed by several parameters. For example, the status of a light can be something like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n  "on": false,\n  "online": true,\n  "brightness": 80,\n  "color": {\n    "temperature": 5000\n  }\n}\n')),(0,i.kt)("p",null,"You can see all the device's parameters at ",(0,i.kt)("inlineCode",{parentName:"p"},"https://<your.domain.com>/devices/info/<device-id>/")),(0,i.kt)("h2",{id:"subscribing-to-the-status-of-a-device"},"Subscribing to the status of a device"),(0,i.kt)("p",null,"Every device has at least two topics where Homeware posts the status of the device if it changes. You can see all the device's topics at ",(0,i.kt)("inlineCode",{parentName:"p"},"https://<your.domain.com>/devices/connecting/<device-id>/")),(0,i.kt)("h3",{id:"main-topic"},"Main Topic"),(0,i.kt)("p",null,"Each device has its own main topic that is used by Homeware to post the status of a device. It publishes all the parameters in a JSON format."),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"main topic for each device")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"device/<device-id>")," where ",(0,i.kt)("inlineCode",{parentName:"p"},"<device-id>")," is the unique id of each device."),(0,i.kt)("h4",{id:"example"},"Example"),(0,i.kt)("p",null,"For a light in which both the On/Off status and the brightness can be controlled, every time the status changes in Homeware, it posts something like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{"on":true,"brightness":80}\n')),(0,i.kt)("h3",{id:"individual-topics"},"Individual Topics"),(0,i.kt)("p",null,"Each device has individual topics for each parameter or command."),(0,i.kt)("h4",{id:"example-1"},"Example"),(0,i.kt)("p",null,"For a light in which the On/Off status can be controlled, every time the ",(0,i.kt)("inlineCode",{parentName:"p"},"on")," status changes in Homeware, it posts the new status in ",(0,i.kt)("inlineCode",{parentName:"p"},"device/<device-id>/on"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"true\n")),(0,i.kt)("h2",{id:"update-the-status-of-a-device"},"Update the status of a device"),(0,i.kt)("p",null,"You can change the status of a device in Homeware posting the new status in the topic ",(0,i.kt)("inlineCode",{parentName:"p"},"device/control")," using the next format:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{"id":"<device-id>","param":"<param-to-change>","value":"<new-value-for-param>","intent":"<new-intent>"}\n')),(0,i.kt)("h4",{id:"example-2"},"Example"),(0,i.kt)("p",null,"For a smart bulb which ",(0,i.kt)("inlineCode",{parentName:"p"},"<device-id>")," at Homeware is light001, if you want to change its brightness to 80%. You must post the following at ",(0,i.kt)("inlineCode",{parentName:"p"},"device/control")," topic:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{"id":"light001","param":"brightness","value":"80","intent":"execute"}\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"intent")," key should be set to ",(0,i.kt)("inlineCode",{parentName:"p"},"execute")," for updating the status of a device."),(0,i.kt)("h2",{id:"request-the-status-of-a-device"},"Request the status of a device"),(0,i.kt)("p",null,"You can request to Homeware to publish the status of a device at any time by posting a request to ",(0,i.kt)("inlineCode",{parentName:"p"},"device/control")," topic."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{"id":"light001","param":"","value":"","intent":"request"}\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"intent")," key should be set to ",(0,i.kt)("inlineCode",{parentName:"p"},"request")," for requesting the status of a device."))}d.isMDXComponent=!0}}]);