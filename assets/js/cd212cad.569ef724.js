"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[407],{5680:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>m});var a=n(6540);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=a.createContext({}),d=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},g=function(e){var t=d(e.components);return a.createElement(u.Provider,{value:t},e.children)},o="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,u=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),o=d(n),y=l,m=o["".concat(u,".").concat(y)]||o[y]||p[y]||r;return n?a.createElement(m,i(i({ref:t},g),{},{components:n})):a.createElement(m,i({ref:t},g))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=y;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[o]="string"==typeof e?e:l,i[1]=s;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},9983:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(8168),l=(n(6540),n(5680));const r={id:"datapy",title:"Data.py file",sidebar_label:"Back - data.py"},i=void 0,s={unversionedId:"datapy",id:"datapy",title:"Data.py file",description:"Data is a class intended to interact with both the database and disk files. When an object is created the constructor do task related with verify the database and the data contined in it.",source:"@site/docs/datapy.md",sourceDirName:".",slug:"/datapy",permalink:"/docs/datapy",draft:!1,editUrl:"https://github.com/kikeelectronico/Homeware-LAN/tree/master/docs/docs/datapy.md",tags:[],version:"current",frontMatter:{id:"datapy",title:"Data.py file",sidebar_label:"Back - data.py"},sidebar:"someSidebar",previous:{title:"Directories",permalink:"/docs/directories"},next:{title:"Back - commands.py",permalink:"/docs/commandspy"}},u={},d=[{value:"Method - getVersion",id:"method---getversion",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Method - getGlobal",id:"method---getglobal",level:2},{value:"Arguments",id:"arguments-1",level:3},{value:"Returns",id:"returns-1",level:3},{value:"Method - createFile",id:"method---createfile",level:2},{value:"Arguments",id:"arguments-2",level:3},{value:"Returns",id:"returns-2",level:3},{value:"Method - load",id:"method---load",level:2},{value:"Arguments",id:"arguments-3",level:3},{value:"Returns",id:"returns-3",level:3},{value:"Method - createDevice",id:"method---createdevice",level:2},{value:"Arguments",id:"arguments-4",level:3},{value:"device_data",id:"device_data",level:4},{value:"Returns",id:"returns-4",level:3},{value:"Method - deleteDevice",id:"method---deletedevice",level:2},{value:"Arguments",id:"arguments-5",level:3},{value:"device_id",id:"device_id",level:4},{value:"Returns",id:"returns-5",level:3},{value:"Method - getStatus",id:"method---getstatus",level:2},{value:"Arguments",id:"arguments-6",level:3},{value:"Returns",id:"returns-6",level:3},{value:"Method - updateStatus",id:"method---updatestatus",level:2},{value:"Arguments",id:"arguments-7",level:3},{value:"device",id:"device",level:4},{value:"param",id:"param",level:4},{value:"value",id:"value",level:4},{value:"Returns",id:"returns-7",level:3},{value:"Method - getTasks",id:"method---gettasks",level:2},{value:"Arguments",id:"arguments-8",level:3},{value:"Returns",id:"returns-8",level:3},{value:"Method - getTask",id:"method---gettask",level:2},{value:"Arguments",id:"arguments-9",level:3},{value:"task_id",id:"task_id",level:4},{value:"Returns",id:"returns-9",level:3},{value:"Method - updateTask",id:"method---updatetask",level:2},{value:"Arguments",id:"arguments-10",level:3},{value:"task",id:"task",level:4},{value:"Returns",id:"returns-10",level:3},{value:"Method - createTask",id:"method---createtask",level:2},{value:"Arguments",id:"arguments-11",level:3},{value:"task",id:"task-1",level:4},{value:"Returns",id:"returns-11",level:3},{value:"Method - deleteTask",id:"method---deletetask",level:2},{value:"Arguments",id:"arguments-12",level:3},{value:"task_id",id:"task_id-1",level:4},{value:"Returns",id:"returns-12",level:3},{value:"Method  - setUser",id:"method----setuser",level:2},{value:"Arguments",id:"arguments-13",level:3},{value:"incomming_data",id:"incomming_data",level:4},{value:"Returns",id:"returns-13",level:3},{value:"Method - updatePassword",id:"method---updatepassword",level:2},{value:"Arguments",id:"arguments-14",level:3},{value:"incomming_data",id:"incomming_data-1",level:4},{value:"Returns",id:"returns-14",level:3},{value:"Method - login",id:"method---login",level:2},{value:"Arguments",id:"arguments-15",level:3},{value:"incomming_data",id:"incomming_data-2",level:4},{value:"Returns",id:"returns-15",level:3},{value:"Method - validateUserToken",id:"method---validateusertoken",level:2},{value:"Arguments",id:"arguments-16",level:3},{value:"incomming_data",id:"incomming_data-3",level:4},{value:"Returns",id:"returns-16",level:3},{value:"Method - getAPIKey",id:"method---getapikey",level:2},{value:"Arguments",id:"arguments-17",level:3},{value:"Returns",id:"returns-17",level:3},{value:"Method - generateAPIKey",id:"method---generateapikey",level:2},{value:"Arguments",id:"arguments-18",level:3},{value:"Returns",id:"returns-18",level:3},{value:"Method - getToken",id:"method---gettoken",level:2},{value:"Arguments",id:"arguments-19",level:3},{value:"agent",id:"agent",level:4},{value:"Returns",id:"returns-19",level:3},{value:"Method - updateToken",id:"method---updatetoken",level:2},{value:"Arguments",id:"arguments-20",level:3},{value:"agent",id:"agent-1",level:4},{value:"type",id:"type",level:4},{value:"value",id:"value-1",level:4},{value:"timestamp",id:"timestamp",level:4},{value:"Returns",id:"returns-20",level:3},{value:"Method - getSettings",id:"method---getsettings",level:2},{value:"Arguments",id:"arguments-21",level:3},{value:"Returns",id:"returns-21",level:3},{value:"Method - updateSettings",id:"method---updatesettings",level:2},{value:"Arguments",id:"arguments-22",level:3},{value:"incomming_data",id:"incomming_data-4",level:4},{value:"Returns",id:"returns-22",level:3},{value:"Method - setDomain",id:"method---setdomain",level:2},{value:"Arguments",id:"arguments-23",level:3},{value:"domain",id:"domain",level:4},{value:"Returns",id:"returns-23",level:3},{value:"Method - setSyncDevices",id:"method---setsyncdevices",level:2},{value:"Arguments",id:"arguments-24",level:3},{value:"status",id:"status",level:4},{value:"Returns",id:"returns-24",level:3},{value:"Method - getSyncDevices",id:"method---getsyncdevices",level:2},{value:"Arguments",id:"arguments-25",level:3},{value:"Returns",id:"returns-25",level:3},{value:"Method - getMQTT",id:"method---getmqtt",level:2},{value:"Arguments",id:"arguments-26",level:3},{value:"Returns",id:"returns-26",level:3},{value:"Method - getDDNS",id:"method---getddns",level:2},{value:"Arguments",id:"arguments-27",level:3},{value:"Returns",id:"returns-27",level:3},{value:"Method - updateDDNS",id:"method---updateddns",level:2},{value:"Arguments",id:"arguments-28",level:3},{value:"ip",id:"ip",level:4},{value:"status",id:"status-1",level:4},{value:"code",id:"code",level:4},{value:"enabled",id:"enabled",level:4},{value:"last",id:"last",level:4},{value:"Returns",id:"returns-28",level:3},{value:"Method - redisStatus",id:"method---redisstatus",level:2},{value:"Arguments",id:"arguments-29",level:3},{value:"Returns",id:"returns-29",level:3},{value:"Method - updateSyncGoogle",id:"method---updatesyncgoogle",level:2},{value:"Arguments",id:"arguments-30",level:3},{value:"status",id:"status-2",level:4},{value:"Returns",id:"returns-30",level:3},{value:"Method - log",id:"method---log",level:2},{value:"Arguments",id:"arguments-31",level:3},{value:"severity",id:"severity",level:4},{value:"message",id:"message",level:4},{value:"Returns",id:"returns-31",level:3},{value:"Method - setVerbose",id:"method---setverbose",level:2},{value:"Arguments",id:"arguments-32",level:3},{value:"verbose",id:"verbose",level:4},{value:"Returns",id:"returns-32",level:3},{value:"Method - getLog",id:"method---getlog",level:2},{value:"Arguments",id:"arguments-33",level:3},{value:"Returns",id:"returns-33",level:3},{value:"Method - isThereAnAlert",id:"method---isthereanalert",level:2},{value:"Arguments",id:"arguments-34",level:3},{value:"Returns",id:"returns-34",level:3},{value:"Method - updateAlive",id:"method---updatealive",level:2},{value:"Arguments",id:"arguments-35",level:3},{value:"core",id:"core",level:4},{value:"Returns",id:"returns-35",level:3},{value:"Method - getAlive",id:"method---getalive",level:2},{value:"Arguments",id:"arguments-36",level:3},{value:"Returns",id:"returns-36",level:3}],g={toc:d},o="wrapper";function p(e){let{components:t,...n}=e;return(0,l.yg)(o,(0,a.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("p",null,"Data is a class intended to interact with both the database and disk files. When an object is created the constructor do task related with verify the database and the data contined in it."),(0,l.yg)("h2",{id:"method---getversion"},"Method - getVersion"),(0,l.yg)("p",null,"This method returns the Homeware version."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.getVersion()")),(0,l.yg)("h3",{id:"arguments"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns"},"Returns"),(0,l.yg)("p",null,"The system version object."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  version: '1.5.1'\n}\n")),(0,l.yg)("h2",{id:"method---getglobal"},"Method - getGlobal"),(0,l.yg)("p",null,"The method returns all the devices data and all tasks."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.getGlobal()")),(0,l.yg)("h3",{id:"arguments-1"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-1"},"Returns"),(0,l.yg)("p",null,"An object containing devices, status and tasks."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  devices: [...],\n  status: {...},\n  tasks: [...]\n}\n")),(0,l.yg)("h2",{id:"method---createfile"},"Method - createFile"),(0,l.yg)("p",null,"Homeware can backup the important data from the database into a file named ",(0,l.yg)("em",{parentName:"p"},"Homeware.json"),". This method do the task."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.createFile()")),(0,l.yg)("h3",{id:"arguments-2"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-2"},"Returns"),(0,l.yg)("p",null,"None"),(0,l.yg)("h2",{id:"method---load"},"Method - load"),(0,l.yg)("p",null,"This method restore the database from the Homware.json file."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.load()")),(0,l.yg)("h3",{id:"arguments-3"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-3"},"Returns"),(0,l.yg)("p",null,"None"),(0,l.yg)("h2",{id:"method---createdevice"},"Method - createDevice"),(0,l.yg)("p",null,"The method creates a new device."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.createDevice(device_data)")),(0,l.yg)("h3",{id:"arguments-4"},"Arguments"),(0,l.yg)("h4",{id:"device_data"},"device_data"),(0,l.yg)("p",null,"It is the definition of the device that want to be created."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: json"),(0,l.yg)("li",{parentName:"ul"},"Example: ")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  device: {\n    ...\n  },\n  status: {\n    ...\n  }\n}\n")),(0,l.yg)("p",null,"Check the device defition and status definition at ",(0,l.yg)("a",{href:"https://developers.google.com/assistant/smarthome/overview"},"Google Smart Home guide")),(0,l.yg)("h3",{id:"returns-4"},"Returns"),(0,l.yg)("p",null,"None"),(0,l.yg)("h2",{id:"method---deletedevice"},"Method - deleteDevice"),(0,l.yg)("p",null,"The method deletes a device."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.deleteDevice(device_id)")),(0,l.yg)("h3",{id:"arguments-5"},"Arguments"),(0,l.yg)("h4",{id:"device_id"},"device_id"),(0,l.yg)("p",null,"It is the id of the device that want to be deleted."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string"),(0,l.yg)("li",{parentName:"ul"},"Example: 'lamp_001'")),(0,l.yg)("h3",{id:"returns-5"},"Returns"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"True")," if the device was found and deleted. ",(0,l.yg)("inlineCode",{parentName:"p"},"False")," if the device was not found."),(0,l.yg)("h2",{id:"method---getstatus"},"Method - getStatus"),(0,l.yg)("p",null,"This method returns the status of all the devices."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.getStatus()")),(0,l.yg)("h3",{id:"arguments-6"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-6"},"Returns"),(0,l.yg)("p",null,"A list of devices with its status as a json object."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  device1: {...},\n  device2: {...},\n}\n")),(0,l.yg)("h2",{id:"method---updatestatus"},"Method - updateStatus"),(0,l.yg)("p",null,"This method updates the value of a param for a device."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.updateStatus(device,param,value)")),(0,l.yg)("h3",{id:"arguments-7"},"Arguments"),(0,l.yg)("h4",{id:"device"},"device"),(0,l.yg)("p",null,"It is the id of the device."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string"),(0,l.yg)("li",{parentName:"ul"},"Example: 'light_001'")),(0,l.yg)("h4",{id:"param"},"param"),(0,l.yg)("p",null,"It is the param that want to be updated."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string"),(0,l.yg)("li",{parentName:"ul"},"Example: 'on'")),(0,l.yg)("h4",{id:"value"},"value"),(0,l.yg)("p",null,"It is the new value"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string/number/json/bool"),(0,l.yg)("li",{parentName:"ul"},"Example: True")),(0,l.yg)("h3",{id:"returns-7"},"Returns"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"True")," if the device was found and updated. ",(0,l.yg)("inlineCode",{parentName:"p"},"False")," if the device was not found."),(0,l.yg)("h2",{id:"method---gettasks"},"Method - getTasks"),(0,l.yg)("p",null,"This method returns a list with all the tasks."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.getTasks()")),(0,l.yg)("h3",{id:"arguments-8"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-8"},"Returns"),(0,l.yg)("p",null,"A list of taks. In example:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},'[\n  {\n    title: "A title",\n    description: " A description",\n    triggers: {\n      trigger: {\n        type: "or",\n        parent: "triggers",\n        operation: [\n          1602355786257\n        ]\n      },\n      "1602355786257": {\n        operation: "22:0:1234560",\n        parent: "trigger",\n        type: "time"\n      }\n    },\n    target: [\n      {\n        device: "night_scene",\n        param: "enable",\n        value: false\n      }\n    ]\n  },\n  ...\n]\n')),(0,l.yg)("h2",{id:"method---gettask"},"Method - getTask"),(0,l.yg)("p",null,"This method returns a task."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.getTask(task_id)")),(0,l.yg)("h3",{id:"arguments-9"},"Arguments"),(0,l.yg)("h4",{id:"task_id"},"task_id"),(0,l.yg)("p",null,"Identifies the task that will be returned."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: int"),(0,l.yg)("li",{parentName:"ul"},"Example: 4")),(0,l.yg)("h3",{id:"returns-9"},"Returns"),(0,l.yg)("p",null,"A task object. In example:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},'{\n  title: "A title",\n  description: " A description",\n  triggers: {\n    trigger: {\n      type: "or",\n      parent: "triggers",\n      operation: [\n        1602355786257\n      ]\n    },\n    "1602355786257": {\n      operation: "22:0:1234560",\n      parent: "trigger",\n      type: "time"\n    }\n  },\n  target: [\n    {\n      device: "night_scene",\n      param: "enable",\n      value: false\n    }\n  ]\n}\n')),(0,l.yg)("h2",{id:"method---updatetask"},"Method - updateTask"),(0,l.yg)("p",null,"This method updates the definition of a task."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.updateTask(task)")),(0,l.yg)("h3",{id:"arguments-10"},"Arguments"),(0,l.yg)("h4",{id:"task"},"task"),(0,l.yg)("p",null,"The definition of the task and its id."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: json"),(0,l.yg)("li",{parentName:"ul"},"Example: ")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},'{\n  id: 5,\n  task: {\n    title: "A title",\n    description: " A description",\n    triggers: {\n      trigger: {\n        type: "or",\n        parent: "triggers",\n        operation: [\n          1602355786257\n        ]\n      },\n      "1602355786257": {\n        operation: "22:0:1234560",\n        parent: "trigger",\n        type: "time"\n      }\n    },\n    target: [\n      {\n        device: "night_scene",\n        param: "enable",\n        value: false\n      }\n    ]\n  }\n}\n')),(0,l.yg)("h3",{id:"returns-10"},"Returns"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"True")," if the task was found and updated. ",(0,l.yg)("inlineCode",{parentName:"p"},"False")," if the task was not found."),(0,l.yg)("h2",{id:"method---createtask"},"Method - createTask"),(0,l.yg)("p",null,"This method creates a new task with the definition received."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"mydata.createTask(task)")),(0,l.yg)("h3",{id:"arguments-11"},"Arguments"),(0,l.yg)("h4",{id:"task-1"},"task"),(0,l.yg)("p",null,"The definition of the task and its id."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: json"),(0,l.yg)("li",{parentName:"ul"},"Example: ")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},'{\n  id: 5,\n  task: {\n    title: "A title",\n    description: " A description",\n    triggers: {\n      trigger: {\n        type: "or",\n        parent: "triggers",\n        operation: [\n          1602355786257\n        ]\n      },\n      "1602355786257": {\n        operation: "22:0:1234560",\n        parent: "trigger",\n        type: "time"\n      }\n    },\n    target: [\n      {\n        device: "night_scene",\n        param: "enable",\n        value: false\n      }\n    ]\n  }\n}\n')),(0,l.yg)("h3",{id:"returns-11"},"Returns"),(0,l.yg)("p",null,"None"),(0,l.yg)("h2",{id:"method---deletetask"},"Method - deleteTask"),(0,l.yg)("p",null,"This method deletes a task."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.deleteTask(task_id)")),(0,l.yg)("h3",{id:"arguments-12"},"Arguments"),(0,l.yg)("h4",{id:"task_id-1"},"task_id"),(0,l.yg)("p",null,"The id of the task that wnat to be deleted."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: int"),(0,l.yg)("li",{parentName:"ul"},"Example: 3")),(0,l.yg)("h3",{id:"returns-12"},"Returns"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"True")," if the task was found and deleted. ",(0,l.yg)("inlineCode",{parentName:"p"},"False")," if the task was not found."),(0,l.yg)("h2",{id:"method----setuser"},"Method  - setUser"),(0,l.yg)("p",null,"This method set the username and password for the first time. It only can be call once."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.setUser(incomming_data)")),(0,l.yg)("h3",{id:"arguments-13"},"Arguments"),(0,l.yg)("h4",{id:"incomming_data"},"incomming_data"),(0,l.yg)("p",null,"The username and password in plain text."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: json"),(0,l.yg)("li",{parentName:"ul"},"Example: ")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  user: 'my-username',\n  pass: 'my-password'\n}\n")),(0,l.yg)("h3",{id:"returns-13"},"Returns"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"Saved correctly!")," if it is the first time. ",(0,l.yg)("inlineCode",{parentName:"p"},"Your user has been set in the past")," if the username was set in the past."),(0,l.yg)("h2",{id:"method---updatepassword"},"Method - updatePassword"),(0,l.yg)("p",null,"This method updates the user's password."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.updatePassword(incomming_data)")),(0,l.yg)("h3",{id:"arguments-14"},"Arguments"),(0,l.yg)("h4",{id:"incomming_data-1"},"incomming_data"),(0,l.yg)("p",null,"Both the current and new passwords in plain text."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: json"),(0,l.yg)("li",{parentName:"ul"},"Example:")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  pass: 'my-password',\n  new_pass: 'my-new-password'\n}\n")),(0,l.yg)("h3",{id:"returns-14"},"Returns"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"Updated")," if the password is set. ",(0,l.yg)("inlineCode",{parentName:"p"},"Fail, the password hasn't been changed")," if the process fails."),(0,l.yg)("h2",{id:"method---login"},"Method - login"),(0,l.yg)("p",null,"This method login the user and returns an access token. Only one token can be active, so the current token will be deleted once a new one is created."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.login(incomming_data)")),(0,l.yg)("h3",{id:"arguments-15"},"Arguments"),(0,l.yg)("h4",{id:"incomming_data-2"},"incomming_data"),(0,l.yg)("p",null,"The username and password in plain text."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: json"),(0,l.yg)("li",{parentName:"ul"},"Example: ")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  user: 'my-username',\n  pass: 'my-password'\n}\n")),(0,l.yg)("h3",{id:"returns-15"},"Returns"),(0,l.yg)("p",null,"Both the login data and login status object:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  status: 'in',\n  user: 'my-username',\n  token: 'the-access-token'\n}\n")),(0,l.yg)("p",null,"or the login status object:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  status: 'fail'\n}\n")),(0,l.yg)("h2",{id:"method---validateusertoken"},"Method - validateUserToken"),(0,l.yg)("p",null,"This method validates the user's token."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.validateUserToken(incomming_data)")),(0,l.yg)("h3",{id:"arguments-16"},"Arguments"),(0,l.yg)("h4",{id:"incomming_data-3"},"incomming_data"),(0,l.yg)("p",null,"The username and password in plain text."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: json"),(0,l.yg)("li",{parentName:"ul"},"Example: ")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  user: 'my-username',\n  token: 'the-access-token'\n}\n")),(0,l.yg)("h3",{id:"returns-16"},"Returns"),(0,l.yg)("p",null,"The the login success status object :"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  status: 'in'\n}\n")),(0,l.yg)("p",null,"or the login failed status object fail:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  status: 'fail'\n}\n")),(0,l.yg)("h2",{id:"method---getapikey"},"Method - getAPIKey"),(0,l.yg)("p",null,"This method returns the active apiakey."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.getAPIKey()")),(0,l.yg)("h3",{id:"arguments-17"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-17"},"Returns"),(0,l.yg)("p",null,"An object containing the apikey."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  apikey: 'the-apikey'\n}\n")),(0,l.yg)("h2",{id:"method---generateapikey"},"Method - generateAPIKey"),(0,l.yg)("p",null,"This method generates a new apiakey. Only one apikey can be active. When a new apikey is generated, the older one will be deleted."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.generateAPIKey()")),(0,l.yg)("h3",{id:"arguments-18"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-18"},"Returns"),(0,l.yg)("p",null,"An object containing the apikey."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  apikey: 'the-apikey'\n}\n")),(0,l.yg)("h2",{id:"method---gettoken"},"Method - getToken"),(0,l.yg)("p",null,"Get an oauth2 active token's obeject by the service name. Note: This method will be deprecated."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.getToken(agent)")),(0,l.yg)("h3",{id:"arguments-19"},"Arguments"),(0,l.yg)("h4",{id:"agent"},"agent"),(0,l.yg)("p",null,"The service name (agent). Only Google is supported by now."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string"),(0,l.yg)("li",{parentName:"ul"},"Possible values: 'google'")),(0,l.yg)("h3",{id:"returns-19"},"Returns"),(0,l.yg)("p",null,"An string containing the token or a token object."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  access_token: {\n    timestamp: 1579452782954,\n    value: '-'\n  },\n  authorization_code: {\n    timestamp: 1579452777875,\n    value: '-'\n  },\n  client_id: '123',\n  client_secret: '456',\n  refresh_token: {\n    timestamp: 1579452782954,\n    value: '-'\n  }\n}\n")),(0,l.yg)("h2",{id:"method---updatetoken"},"Method - updateToken"),(0,l.yg)("p",null,"Update an oauth2 token of a service by type. Note: This method will be deprecated."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.updateToken(agent, type, value, timestamp)")),(0,l.yg)("h3",{id:"arguments-20"},"Arguments"),(0,l.yg)("h4",{id:"agent-1"},"agent"),(0,l.yg)("p",null,"The service name (agent). Only Google is supported by now."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string"),(0,l.yg)("li",{parentName:"ul"},"Possible values: 'google'")),(0,l.yg)("h4",{id:"type"},"type"),(0,l.yg)("p",null,"The token type."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string"),(0,l.yg)("li",{parentName:"ul"},"Possible values: 'authorization_code' || 'access_token' || 'refresh_token'")),(0,l.yg)("h4",{id:"value-1"},"value"),(0,l.yg)("p",null,"The new token."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string"),(0,l.yg)("li",{parentName:"ul"},"Example: 'my-new-token'")),(0,l.yg)("h4",{id:"timestamp"},"timestamp"),(0,l.yg)("p",null,"The timestamp when the new token was generated."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: int"),(0,l.yg)("li",{parentName:"ul"},"Example: 1579452777875")),(0,l.yg)("h3",{id:"returns-20"},"Returns"),(0,l.yg)("p",null,"None"),(0,l.yg)("h2",{id:"method---getsettings"},"Method - getSettings"),(0,l.yg)("p",null,"This method returns the read settings object."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.getSettings()")),(0,l.yg)("h3",{id:"arguments-21"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-21"},"Returns"),(0,l.yg)("p",null,"The read settings object."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  google: {\n    client_id: '1234',\n    client_secret: '56789'\n  },\n  'ddns': {\n    'enabled': false,\n    'status': 'Unknown',\n    'code': 'Unknown',\n    'last': 'Unknown',\n    'ip': 'Unknown',\n    'provider': 'noip',\n    'hostname': '',\n    'username': '',\n    'password': ''\n  },\n  'mqtt': {\n    'user': 'mosquitto',\n    'password': 'homewarelan123'\n  }\n  sync_google: true,\n  sync_devices: true,\n}\n")),(0,l.yg)("h2",{id:"method---updatesettings"},"Method - updateSettings"),(0,l.yg)("p",null,"This method updates the settings object."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.updateSettings(incomming_data)")),(0,l.yg)("h3",{id:"arguments-22"},"Arguments"),(0,l.yg)("h4",{id:"incomming_data-4"},"incomming_data"),(0,l.yg)("p",null,"An object with the settings to save."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: json"),(0,l.yg)("li",{parentName:"ul"},"Example:")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  token: {\n    google: {\n      client_id: '1234',\n      client_secret: '56789'\n    }\n  }\n  'ddns': {\n    'provider': 'noip',\n    'hostname': '',\n    'username': '',\n    'password': ''\n  },\n  'mqtt': {\n    'user': 'mosquitto',\n    'password': 'homewarelan123'\n  }\n  sync_google: true,\n  sync_devices: true,\n}\n")),(0,l.yg)("h3",{id:"returns-22"},"Returns"),(0,l.yg)("p",null,"None"),(0,l.yg)("h2",{id:"method---setdomain"},"Method - setDomain"),(0,l.yg)("p",null,"This method sets the domain name. It only can be called once."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.setDomain(domain)")),(0,l.yg)("h3",{id:"arguments-23"},"Arguments"),(0,l.yg)("h4",{id:"domain"},"domain"),(0,l.yg)("p",null,"The domain name."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string"),(0,l.yg)("li",{parentName:"ul"},"Example: '",(0,l.yg)("a",{parentName:"li",href:"http://www.mydomain.com'"},"www.mydomain.com'"))),(0,l.yg)("h3",{id:"returns-23"},"Returns"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"Saved correctly!")," if it is the first time. ",(0,l.yg)("inlineCode",{parentName:"p"},"Your domain has been set in the past")," if the domain was set in the past."),(0,l.yg)("h2",{id:"method---setsyncdevices"},"Method - setSyncDevices"),(0,l.yg)("p",null,"This method sets the sync_devices setting."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.setSyncDevices(status)")),(0,l.yg)("h3",{id:"arguments-24"},"Arguments"),(0,l.yg)("h4",{id:"status"},"status"),(0,l.yg)("p",null,"The new value for the setting."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: bool"),(0,l.yg)("li",{parentName:"ul"},"Example: true")),(0,l.yg)("h3",{id:"returns-24"},"Returns"),(0,l.yg)("p",null,"None"),(0,l.yg)("h2",{id:"method---getsyncdevices"},"Method - getSyncDevices"),(0,l.yg)("p",null,"This method returns the sync_devices setting."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.getSyncDevices()")),(0,l.yg)("h3",{id:"arguments-25"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-25"},"Returns"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"True")," if sync_devices is enabled. ",(0,l.yg)("inlineCode",{parentName:"p"},"false")," if it is not enabled."),(0,l.yg)("h2",{id:"method---getmqtt"},"Method - getMQTT"),(0,l.yg)("p",null,"This method returns the MQTT user and password."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.getMQTT()")),(0,l.yg)("h3",{id:"arguments-26"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-26"},"Returns"),(0,l.yg)("p",null,"An object that contains the username and the password."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  user: 'mosquitto',\n  password: 'homewarelan123'\n}\n")),(0,l.yg)("h2",{id:"method---getddns"},"Method - getDDNS"),(0,l.yg)("p",null,"This method returns the both the DDNS settings and the DDNS status."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.getDDNS()")),(0,l.yg)("h3",{id:"arguments-27"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-27"},"Returns"),(0,l.yg)("p",null,"An object that contains both the DDNS settings and the DDNS status."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  enabled: false,\n  status: 'Unknown',\n  code: 'Unknown',\n  last: 'Unknown',\n  ip: 'Unknown',\n  provider: 'noip',\n  hostname: '',\n  username: '',\n  password: ''\n}\n")),(0,l.yg)("h2",{id:"method---updateddns"},"Method - updateDDNS"),(0,l.yg)("p",null,"This method updates the DDNS status."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.updateDDNS(ip, status, code, enabled, last)")),(0,l.yg)("h3",{id:"arguments-28"},"Arguments"),(0,l.yg)("h4",{id:"ip"},"ip"),(0,l.yg)("p",null,"Homeware's public IP."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string"),(0,l.yg)("li",{parentName:"ul"},"Example: '1.1.1.1'")),(0,l.yg)("h4",{id:"status-1"},"status"),(0,l.yg)("p",null,"Status of the DDNS request."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string"),(0,l.yg)("li",{parentName:"ul"},"Example: 'Running'")),(0,l.yg)("h4",{id:"code"},"code"),(0,l.yg)("p",null,"Code of the DDNS request."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: int"),(0,l.yg)("li",{parentName:"ul"},"Example: 200")),(0,l.yg)("h4",{id:"enabled"},"enabled"),(0,l.yg)("p",null,"Enables the DDNS updater."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: bool"),(0,l.yg)("li",{parentName:"ul"},"Example: true")),(0,l.yg)("h4",{id:"last"},"last"),(0,l.yg)("p",null,"Last request timestap."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: int"),(0,l.yg)("li",{parentName:"ul"},"Example: 1579452782954")),(0,l.yg)("h3",{id:"returns-28"},"Returns"),(0,l.yg)("p",null,"None"),(0,l.yg)("h2",{id:"method---redisstatus"},"Method - redisStatus"),(0,l.yg)("p",null,"This method returns the status availability of the Redis server."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.redisStatus()")),(0,l.yg)("h3",{id:"arguments-29"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-29"},"Returns"),(0,l.yg)("p",null,"A running system status object."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  enable: True,\n  status: 'Running',\n  title: 'Redis database'\n}\n")),(0,l.yg)("p",null,"or a stopped system status object:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  enable: True,\n  status: 'Stopped',\n  title: 'Redis database'\n}\n")),(0,l.yg)("h2",{id:"method---updatesyncgoogle"},"Method - updateSyncGoogle"),(0,l.yg)("p",null,"This method sets the sync_google setting. This method will be deprecated."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.updateSyncGoogle(status)")),(0,l.yg)("h3",{id:"arguments-30"},"Arguments"),(0,l.yg)("h4",{id:"status-2"},"status"),(0,l.yg)("p",null,"The new value for the setting."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: bool"),(0,l.yg)("li",{parentName:"ul"},"Example: true")),(0,l.yg)("h3",{id:"returns-30"},"Returns"),(0,l.yg)("p",null,"None"),(0,l.yg)("h2",{id:"method---log"},"Method - log"),(0,l.yg)("p",null,"This method creates a new register in the systems log and raise the Alert flag if necessary."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.log(severity, message)")),(0,l.yg)("h3",{id:"arguments-31"},"Arguments"),(0,l.yg)("h4",{id:"severity"},"severity"),(0,l.yg)("p",null,"The severity."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string"),(0,l.yg)("li",{parentName:"ul"},"Possible values: 'Alert' || 'Warning' || 'Log'")),(0,l.yg)("h4",{id:"message"},"message"),(0,l.yg)("p",null,"The message to log."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string"),(0,l.yg)("li",{parentName:"ul"},"Example: 'The dog opened the door'")),(0,l.yg)("h3",{id:"returns-31"},"Returns"),(0,l.yg)("p",null,"None"),(0,l.yg)("h2",{id:"method---setverbose"},"Method - setVerbose"),(0,l.yg)("p",null,"This method enables verbose debugging."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.setVerbose(verbose)")),(0,l.yg)("h3",{id:"arguments-32"},"Arguments"),(0,l.yg)("h4",{id:"verbose"},"verbose"),(0,l.yg)("p",null,"The verbose value."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: boolean"),(0,l.yg)("li",{parentName:"ul"},"Example: true")),(0,l.yg)("h3",{id:"returns-32"},"Returns"),(0,l.yg)("p",null,"None"),(0,l.yg)("h2",{id:"method---getlog"},"Method - getLog"),(0,l.yg)("p",null,"This method returns the system log."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.getLog()")),(0,l.yg)("h3",{id:"arguments-33"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-33"},"Returns"),(0,l.yg)("p",null,"A list of registers."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"[\n  {\n    severity: 'Log',\n    time: 1579452782954,\n    message: 'The dog opened the door'\n  },\n  ...\n]\n")),(0,l.yg)("h2",{id:"method---isthereanalert"},"Method - isThereAnAlert"),(0,l.yg)("p",null,"This method returns the alert flag."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.isThereAnAlert()")),(0,l.yg)("h3",{id:"arguments-34"},"Arguments"),(0,l.yg)("p",null,"None"),(0,l.yg)("h3",{id:"returns-34"},"Returns"),(0,l.yg)("p",null,"An alert flag object"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  alert: true\n}\n")),(0,l.yg)("h2",{id:"method---updatealive"},"Method - updateAlive"),(0,l.yg)("p",null,"This method updates the alive timestamp of some homeware's core element."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.updateAlive(core)")),(0,l.yg)("h3",{id:"arguments-35"},"Arguments"),(0,l.yg)("h4",{id:"core"},"core"),(0,l.yg)("p",null,"The core name."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Type: string"),(0,l.yg)("li",{parentName:"ul"},"Possible values: 'tasks' || 'mqtt'")),(0,l.yg)("h3",{id:"returns-35"},"Returns"),(0,l.yg)("p",null,"None"),(0,l.yg)("h2",{id:"method---getalive"},"Method - getAlive"),(0,l.yg)("p",null,"This method returns the alive timestamps of some homeware's core elements."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"myData.getAlive(core)")),(0,l.yg)("h3",{id:"arguments-36"},"Arguments"),(0,l.yg)("h3",{id:"returns-36"},"Returns"),(0,l.yg)("p",null,"A system alive object."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"{\n  tasks: 1579452782954,\n  mqtt: 1579452782954\n}\n")))}p.isMDXComponent=!0}}]);