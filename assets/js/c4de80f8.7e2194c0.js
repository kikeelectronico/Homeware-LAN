"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[943],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(k,l(l({ref:t},c),{},{components:n})):a.createElement(k,l({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7520:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=["components"],i={id:"install",title:"Install Homeware",sidebar_label:"Installation"},s="Dependencies",p={unversionedId:"install",id:"install",title:"Install Homeware",description:"1. Install docker and docker-compose",source:"@site/docs/install.md",sourceDirName:".",slug:"/install",permalink:"/Homeware-LAN/docs/install",editUrl:"https://github.com/kikeelectronico/Homeware-LAN/tree/master/docs/docs/install.md",tags:[],version:"current",frontMatter:{id:"install",title:"Install Homeware",sidebar_label:"Installation"},sidebar:"someSidebar",next:{title:"Connect with Google",permalink:"/Homeware-LAN/docs/connect-with-google"}},c={},u=[],m={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dependencies"},"Dependencies"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install docker and docker-compose")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install -y docker docker-compose\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Install git")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install -y git\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Install your favourite text editor. For example, nano.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install -y nano\n")),(0,o.kt)("h1",{id:"install-process"},"Install process"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Open the ports 80 and 443 on your router/firewall if needed.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create a DDNS domain and set it using your public IP. DuckDNS and no-ip are supported.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Clone the repo and cd into it  "))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/kikeelectronico/Homeware-LAN.git\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd Homeware-LAN\n")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Create your own ",(0,o.kt)("inlineCode",{parentName:"li"},".env")," file from ",(0,o.kt)("inlineCode",{parentName:"li"},".env.template"),". Data will be used to generate certs on letsencrypt.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cp configuration_templates/.env.template .env\n")),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},"Replace the default data with your values.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"DOMAIN: your domain name from step 2."),(0,o.kt)("li",{parentName:"ul"},"EMAIL: your email. It is used for getting the SSL certificate from Let's Encrypt."),(0,o.kt)("li",{parentName:"ul"},"HOMEWARE_USER: the admin username that you will use to log in."),(0,o.kt)("li",{parentName:"ul"},"HOMEWARE_PASSWORD: the admin password that you will use to log in.")),(0,o.kt)("ol",{start:6},(0,o.kt)("li",{parentName:"ol"},"Copy the docker-compose file")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Debian / Ubuntu")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cp docker/docker-compose-debian.yaml docker-compose.yaml\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Raspberry Pi / ARM cores")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cp docker/docker-compose-raspberry.yaml docker-compose.yaml\n")),(0,o.kt)("ol",{start:7},(0,o.kt)("li",{parentName:"ol"},"Start the project")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up -d\n")),(0,o.kt)("ol",{start:8},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Follow this steps to link Homeware with Google Home: ",(0,o.kt)("a",{parentName:"p",href:"https://kikeelectronico.github.io/Homeware-LAN/docs/connect-with-google"},"https://kikeelectronico.github.io/Homeware-LAN/docs/connect-with-google"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Finally, set up the necessary data using the Homeware's ",(0,o.kt)("em",{parentName:"p"},"Settings")," page."))),(0,o.kt)("h1",{id:"default-mqtt-user-and-password"},"Default MQTT user and password"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"User: mosquitto"),(0,o.kt)("li",{parentName:"ul"},"Password: homewarelan123")),(0,o.kt)("p",null,"You may create a different ",(0,o.kt)("inlineCode",{parentName:"p"},"mosquitto_passwd")," file following ",(0,o.kt)("a",{parentName:"p",href:"https://mosquitto.org/man/mosquitto_passwd-1.html"},"these steps"),"  "),(0,o.kt)("p",null,"Thanks to ",(0,o.kt)("a",{href:"https://github.com/ajpl",tarjet:"blanck"},"@ajpl")," for the PR."))}d.isMDXComponent=!0}}]);